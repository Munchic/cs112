confint(lm(weight ~ group, data = plant.growth))
boot.plant.coef
boot.plant.coef <- boot(plant.growth, boot.fn, 10000)
boot.plant.coef
boot.plant.coef
boot.plant.coef$t
boot.plant.coef$t[1]
summary(plant.weight.lm)
confint(lm(weight ~ group, data = plant.growth))
confint(boot.plant.coef$t[1])
boot.plant.coef$t[1]
confint(boot.plant.coef$t[1])
boot.plant.coef$t[1]
boot.plant.coef$t[1,]
boot.plant.coef$t[, 1]
confint(boot.plant.coef$t[, 1])
confint(boot.plant.coef$t[, 1])
quantile(boot.plant.coef$t[, 1], c(0.025, 0.975))
quantile(boot.plant.coef$t[, 2], c(0.025, 0.975))
confint(lm(weight ~ group, data = plant.growth))
confint(lm(weight ~ group, data = plant.growth))
boot.plant.coef <- boot(plant.growth, boot.fn, 10000)
quantile(boot.plant.coef$t[, 1], c(0.025, 0.975))
quantile(boot.plant.coef$t[, 2], c(0.025, 0.975))
hist(quantile(boot.plant.coef$t[, 1], c(0.025, 0.975)))
quantile(boot.plant.coef$t[, 1], c(0.025, 0.975))
quantile(boot.plant.coef$t[, 2], c(0.025, 0.975))
boot.plant.coef <- boot(plant.growth, boot.fn, 10000)
quantile(boot.plant.coef$t[, 1], c(0.025, 0.975))
quantile(boot.plant.coef$t[, 2], c(0.025, 0.975))
hist(boot.plant.coef$t[, 1])
hist(boot.plant.coef$t[, 1], 1000)
hist(boot.plant.coef$t[, 1], 100)
hist(boot.plant.coef$t[, 1], 100, col = "blue")
density(boot.plant.coef$t[, 1], 100, col = "blue")
plot(density(boot.plant.coef$t[, 1]), col = "blue")
plot(density(boot.plant.coef$t[, 1]), col = "blue", lwd = 3)
coef(lm(weight ~ group, data = plant.growth))
confint(lm(weight ~ group, data = plant.growth))
coef(lm(weight ~ group, data = plant.growth))
lm(weight ~ group, data = plant.growth)
lm(weight ~ group, data = plant.growth)
summary(lm(weight ~ group, data = plant.growth))
plot(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
lines(density(rnorm(10000, -0.3710, 0.3114)))
lines(density(rnorm(10000, -0.3710, 0.3114)), col = "red", lwd = 3)
plot(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
lines(density(rnorm(10000, -0.3710, 0.3114)), col = "red", lwd = 3)
plot(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
lines(density(rnorm(100000, -0.3710, 0.3114)), col = "red", lwd = 3)
plot(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
lines(density(rnorm(10000000, -0.3710, 0.3114)), col = "red", lwd = 3)
plot(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
lines(density(rnorm(20000000, -0.3710, 0.3114)), col = "red", lwd = 3)
lines(density(rnorm(20000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3)
lines(density(rnorm(20000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3)
plot(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
lines(density(rnorm(20000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3)
lines(density(rnorm(20000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3)
plot(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
lines(density(rnorm(20000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3)
plot(density(rnorm(20000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3)
plot(density(rnorm(40000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3,
xlab = "Slope of regression line")
legend("topleft", inset = .05, title = "Slope distributions", c("analytical", "bootstrapped"), col=c("red", "blue"), lty=3, cex=0.8)
legend("topleft", inset = .05, title = "Slope distributions", c("analytical", "bootstrapped"), col=c("red", "blue"), lty=1, cex=0.8)
legend("topleft", inset = .05, title = "Slope distributions", c("analytical", "bootstrapped"), col=c("red", "blue"), lty=1, cex=1)
legend("topleft", inset = .05, title = "Slope distributions", c("analytical", "bootstrapped"), col=c("red", "blue"), lty=1, cex=0.5)
plot(density(rnorm(40000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3,
xlab = "Slope of regression line")
plot(density(rnorm(50000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3,
xlab = "Slope of regression line")
lines(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
legend("topleft", inset = .05, title = "Slope distributions", c("analytical", "bootstrapped"), col=c("red", "blue"), lty=1, cex=0.8)
lines(frequency(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
plot(frequency(rnorm(50000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3,
xlab = "Slope of regression line")
plot(density(rnorm(50000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3,
xlab = "Slope of regression line")
lines(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
legend("topleft", inset = .05, title = "Slope distributions", c("analytical", "bootstrapped"), col=c("red", "blue"), lty=1, cex=0.8)
boot.plant.coef.low <- boot(plant.growth, boot.fn, 1000)
lines(density(boot.plant.coef.low$t[, 2]), col = "green", lwd = 3)
lines(density(boot.plant.coef.low$t[, 2]), col = "green", lwd = 3)
boot.plant.coef.low <- boot(plant.growth, boot.fn, 100)
lines(density(boot.plant.coef.low$t[, 2]), col = "green", lwd = 3)
plot(density(rnorm(50000000, -0.3710, 0.3114)), type = "l", col = "red", lwd = 3,
xlab = "Slope of regression line")
lines(density(boot.plant.coef.low$t[, 2]), col = "green", lwd = 3)
lines(density(boot.plant.coef$t[, 2]), col = "blue", lwd = 3)
legend("topleft", inset = .05, title = "Slope distributions",
c("analytical", "bootstrapped, n=100", "bootstrapped, n=10k"),
col=c("red", "green", "blue"), lty=1, cex=0.8)
# Exercise 4
r.squared <- function(y.act, y.pred) {
y.mean = mean(y.pred)
SSR = sum((y.act - y.pred)^2)
SST = sum((y.act - y.mean)^2)
return(1 - SSR / SST)
}
r.squared(c(1, 2), c(1, 1.2))
r.squared(c(1, 2), c(1, 2))
r.squared(c(1, 2), c(1, 1.9))
w.pred <- predict(plant.weight.lm)
r.squared(plant.growth$weight, w.pred)
w.pred <- predict(plant.weight.lm)
r.squared(plant.growth$weight, w.pred)
w.pred
plant.growth$weight
w.pred <- predict(plant.weight.lm, newdata = plant.growth)
w.pred
plant.growth$weight
r.squared(plant.growth$weight, w.pred)
w.pred <- predict(plant.weight.lm, plant.growth)
w.pred
plant.growth$weight
r.squared(plant.growth$weight, w.pred)
w.pred <- predict(plant.weight.lm, plant.growth)
plant.growth$weight
r.squared(plant.growth$weight, w.pred)
# Exercise 5
library(foreign)
data <- read.dta("nsw.dta")
getwd()
setwd('./Desktop/CS112/')
getwd()
data <- read.dta("nsw.dta")
head(data)
treat.prob.glm <- glm(treat ~ . -re78, data = data)
data$treat
treat.prob.glm <- glm(treat ~ . -re78, data = data)
treat.prob.glm <- glm(treat ~ . -re78, data = data, family = 'binomial')
treat.prob.glm <- glm(treat ~ . -re78, data = data, family = 'binomial')
treat.prob.glm <- glm(treat ~ ., data = data, family = 'binomial')
-re78
-re78
data <- read.dta("nsw.dta")
head(data)
treat.prob.glm <- glm(treat ~ . -re78, data = data, family = 'binomial')
data$re75
treat.prob.glm <- glm(treat ~ . -re78, data = data, family = 'binomial')
################ PRELIMINARIES
library(MASS)
data(Pima.tr)
library(tree)
library(randomForest)
## STEP 1: Logistic regression ##
logistic_reg <- glm(type ~ ., data = Pima.tr, family = binomial) # basic model
## STEP 1: Logistic regression ##
logistic_reg <- glm(type ~ ., data = Pima.tr, family = binomial) # basic model
data <- read.dta("nsw.dta")
head(data)
treat.prob.glm <- glm(treat ~ . -re78 - data_id, data = data, family = 'binomial')
treat.prob.glm <- glm(treat ~ . -re78 - data_id, data = data, family = 'binomial')
treat.prob.glm <- glm(treat ~ . - re78 - data_id, data = data, family = 'binomial')
treat.prob.glm <- glm(treat ~ age, data = data, family = 'binomial')
treat.prob.glm <- glm(treat ~ age + education + black + hispanic + married + nodegree + re75,
data = data, family = 'binomial')
predict(treat.prob.glm)
treat.prob.glm
hist(predict(treat.prob.glm))
hist(predict(treat.prob.glm, type = 'response'))
treat.prob.glm <- glm(treat ~ age + education + black + hispanic + married + nodegree + re75,
data = data, family = 'binomial')
hist(predict(treat.prob.glm, type = 'response'))
hist(density(predict(treat.prob.glm, type = 'response')))
predict(treat.prob.glm, type = 'response')))
predict(treat.prob.glm, type = 'response'))
predict(treat.prob.glm, type = 'response')
hist(predict(treat.prob.glm, type = 'response'))
hist(predict(treat.prob.glm, type = 'response'), 100)
hist(predict(treat.prob.glm, type = 'response'), 1000)
hist(predict(treat.prob.glm, type = 'response'), 50)
hist(predict(treat.prob.glm, type = 'response'), 100)
plot(hist(predict(treat.prob.glm, type = 'response'), 100))
lines(hist(predict(treat.prob.glm, type = 'response'), 100))
lines(hist(predict(treat.prob.glm, type = 'response'), 1000))
plot(hist(predict(treat.prob.glm, type = 'response'), 100))
lines(hist(predict(treat.prob.glm, type = 'response'), 1000))
treat.idx <- which(data$treat == 1)
cntrl.idx <- which(data$treat == 0)
ctrl.idx <- which(data$treat == 0)
treat.hist <- hist(predict(treat.prob.glm[treat.idx], type = 'response'), 100)
treat.hist <- hist(predict(treat.prob.glm, type = 'response'), 100)
treat.hist <- hist(predict(treat.prob.glm[treat.idx], type = 'response'), 100)
treat.prob.glm[treat.idx]
treat.prob.glm
treat.hist <- hist(predict(treat.prob.glm, type = 'response')[treat.idx], 100)
treat.prob.glm
treat.hist <- hist(predict(treat.prob.glm, type = 'response')[treat.idx], 100)
prob.pred <- predict(treat.prob.glm, type = 'response')
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(treat.hist, col = "red", xlim = c(0, 1))  # first histogram
plot(ctrl.hist, col = "blue", xlim = c(0, 1), add=T)  # second
plot(treat.hist, col = "red", xlim = c(0, 1))  # first histogram
plot(ctrl.hist, col = "blue", xlim = c(0, 1), add=T)  # second
plot(treat.hist, col = "red", xlim = c(0, 1))  # first histogram
plot(ctrl.hist, col = "blue", xlim = c(0, 1), add=T)  # second
treat.hist <- hist(prob.pred[treat.idx], 10)
ctrl.hist <- hist(prob.pred[ctrl.idx], 10)
plot(treat.hist, col = "red", xlim = c(0, 1))  # first histogram
plot(ctrl.hist, col = "blue", xlim = c(0, 1), add=T)  # second
treat.hist <- hist(prob.pred[treat.idx], 10)
ctrl.hist <- hist(prob.pred[ctrl.idx], 10)
plot(treat.hist, col = "red")  # first histogram
plot(ctrl.hist, col = "blue", add=T)  # second
plot(treat.hist, col = "red", pch=20)  # first histogram
plot(ctrl.hist, col = "blue", add=T)  # second
plot(treat.hist, col = "red", pch=20)  # first histogram
plot(ctrl.hist, col = "blue", add=T)  # second
plot(treat.hist, col = "red", pch=20)  # first histogram
plot(ctrl.hist, col = "blue", add=T)  # second
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(treat.hist, col = "red")  # first histogram
plot(ctrl.hist, col = "blue", add=T)  # second
plot(treat.hist, col = "red")  # first histogram
plot(ctrl.hist, col = "blue", add=T)  # second
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(treat.hist, col = "red")  # first histogram
plot(ctrl.hist, col = "blue", add=T)  # second
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = "blue", add=T)  # second
plot(treat.hist, col = "red")  # first histogram
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = "blue")  # second
plot(treat.hist, col = "red", add=T)  # first histogram
prob.pred
plot(ctrl.hist, col = rgb(0, 0, 255, 0.3))  # second
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = rgb(0, 0, 255, 0.3))  # second
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = rgb(0, 0, 255, 0.3))  # second
plot(treat.hist, col = "red", add=T)  # first histogram
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = rgb(0, 0, 255, alpha = 0.3))  # second
plot(ctrl.hist, col = rgb(0, 0, 255, alpha = 0.3))  # second
plot(treat.hist, col = "red", add=T)  # first histogram
plot(ctrl.hist, col = rgb(0, 0, 255, alpha = 100))  # second
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = rgb(0, 0, 255, alpha = 100))  # second
plot(ctrl.hist, col = "rgb(0, 0, 255, alpha = 100)")  # second
plot(ctrl.hist, col = "rgb(0, 0, 255, alpha = 100)")  # second
plot(ctrl.hist, color = "rgb(0, 0, 255, alpha = 100)")  # second
plot(ctrl.hist, col = color(rgb(0, 0, 255, alpha = 100)))  # second
plot(ctrl.hist, col = alpha("blue", 0.4))  # second
library(scales) # for transparent color
install.packages(scales)
install.packages("scales")
library(scales) # for transparent color
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = alpha("blue", 0.4))  # second
plot(treat.hist, col = alpha("red", 0.4), add=T)  # first histogram
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(treat.hist, col = alpha("red", 0.4))  # first histogram
plot(ctrl.hist, col = alpha("blue", 0.4), add = T)  # second
plot(ctrl.hist, col = alpha("blue", 0.4), add = T)
plot(treat.hist, col = alpha("red", 0.4), add = T)
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = alpha("blue", 0.4))
plot(treat.hist, col = alpha("red", 0.4), add = T)
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = alpha("blue", 0.4))
plot(treat.hist, col = alpha("red", 0.3), add = T)
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = alpha("blue", 0.4))
plot(treat.hist, col = alpha("red", 0.3), add = T)
legend("topright", inset = .05, title = "Probability of assignment",
c("treatment", "control"),
fill=c("red", "blue"), lty=16, cex=0.8)
legend("topright", inset = .05, title = "Probability of assignment",
c("treatment", "control"),
fill = c("red", "blue"))
legend("topright", inset = .05, title = "Probability of assignment",
c("treatment", "control"),
fill = c("red", "blue"), cex = 0.8)
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = alpha("blue", 0.4))
plot(treat.hist, col = alpha("red", 0.3), add = T)
legend("topright", inset = .05, title = "Probability of assignment",
c("treatment", "control"),
fill = c("red", "blue"), cex = 0.8)
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = alpha("blue", 0.4))
plot(treat.hist, col = alpha("red", 0.3), add = T)
legend("topright", inset = .05, title = "Probability of assignment",
c("treatment", "control"),
fill = c(alpha("red", 0.3), alpha("blue", 0.4)), cex = 0.8)
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = alpha("blue", 0.4), xlab = "Probability of treatment")
plot(treat.hist, col = alpha("red", 0.3), add = T)
legend("topright", inset = .05, title = "Probability of assignment",
c("treatment", "control"),
fill = c(alpha("red", 0.3), alpha("blue", 0.4)), cex = 0.8)
length(treat.idx)
length(ctrl.idx)
getwed
getwd()
obs.lalonde <- read.csv("observational_lalonde.csv")
head(obs.lalonde)
lm(re78 ~ treat + age + black + I(black*age), data = obs.lalonde)
lm(re78 ~ ., data = obs.lalonde)
86/880 # aggregate purchase rate for members
124/1260 # aggregate purchase rate for non-members
22/484 # members, 31-40
22/504 # non-members, 31-40
30/308
43/567
34/88
59/189
22/484 # members, 31-40
22/504 # non-members, 31-40
30/308
43/567
34/88
59/189
86/880 # aggregate purchase rate for members
124/1260 # aggregate purchase rate for non-members
86/880 # aggregate purchase rate for members
124/1260 # aggregate purchase rate for non-members
22/484 # members, 31-40
22/504 # non-members, 31-40
30/308
43/567
34/88
59/189
lm(re78 ~ treat + age + black + I(black*age), data = obs.lalonde)
lm(re78 ~ ., data = obs.lalonde)
lm(re78 ~ ., data = obs.lalonde)
lm(re78 ~ treat + age + black + I(black*age), data = obs.lalonde)
lm(re78 ~ ., data = obs.lalonde)
# (c)
sigmas <- re78.coef.sim@sigma
PlantGrowth
treat.hist <- hist(prob.pred[treat.idx], 100)
ctrl.hist <- hist(prob.pred[ctrl.idx], 100)
plot(ctrl.hist, col = alpha("blue", 0.4), xlab = "Assigned group")
plot(treat.hist, col = alpha("red", 0.3), add = T)
legend("topright", inset = .05, title = "Probability of assignment",
c("treatment", "control"),
fill = c(alpha("red", 0.3), alpha("blue", 0.4)), cex = 0.8)
plot(ctrl.hist, col = alpha("blue", 0.4), xlab = "Probability of treatment")
plot(treat.hist, col = alpha("red", 0.3), add = T)
legend("topright", inset = .05, title = "Assigned group",
c("treatment", "control"),
fill = c(alpha("red", 0.3), alpha("blue", 0.4)), cex = 0.8)
length(treat.idx)
summary(re78.exp.med)
head(re78.exp.med)
conf.int.exp.med <- apply(re78.exp.med, 1, quantile, probs = c(0.5))
conf.int.exp.med
0.025, 0.975
conf.int.exp.med <- apply(re78.exp.med, 1, quantile, probs = c(0.025, 0.975))
conf.int.exp.med
mean(conf.int.exp.med)
mean(conf.int.exp.med[, 1])
mean(conf.int.exp.med[, 2])
mean(conf.int.exp.med[1, ])
mean(conf.int.exp.med[2, ])
mean(conf.int.exp.med[1, ])
conf.int.exp.med <- apply(re78.exp.med, 1, quantile, probs = c(0.025, 0.975))
conf.int.exp.med
mean(conf.int.exp.med[1, ])
mean(conf.int.exp.med[3, ])
mean(conf.int.exp.med[2, ])
conf.int.exp.med[2, ]
conf.int.exp.med[1, ]
conf.int.exp.med[1, 17:]
conf.int.exp.med[1, 17:end]
conf.int.exp.med[1, 17:55]
mean(conf.int.exp.med[1, 17:55])
summary(lm(weight ~ group, data = plant.growth))
r.squared(plant.growth$weight, w.pred)
w.pred
w.pred <- predict(plant.weight.lm, data = plant.growth)
w.pred
coef
coefs
head(coefs)
7
re78.lm <- lm(re78 ~ age + educ + re74 + re75 + I(educ*re74) + I(educ*re75)
+ I(age*re74) + I(age*re75) + I(age*age) + I(re74*re75),
data = lalonde.cntrl)
re78.coef.sim <- sim(re78.lm, 10000)
coefs <- re78.coef.sim@coef
head(coefs)
lin_est <- function(coefs, params) {
est = coefs[1] +
coefs[2] * params[1] + # age
coefs[3] * params[2] + # educ
coefs[4] * params[3] + # re74
coefs[5] * params[4] + # re75
coefs[6] * params[2] * params[3] + # educ:re74
coefs[7] * params[2] * params[4] + # educ:re75
coefs[8] * params[1] * params[3] + # age:re74
coefs[9] * params[1] * params[4] + # age:re75
coefs[10] * params[1] * params[1] + # age:re75
coefs[11] * params[3] * params[4] # re74:re75
return(est)
}
educ.q <- quantile(lalonde.cntrl$educ, c(0.5, 0.75))
re74.q <- quantile(lalonde.cntrl$re74, c(0.5, 0.75))
re75.q <- quantile(lalonde.cntrl$re75, c(0.5, 0.75))
cntrl.idx <- which(lalonde$treat == 0)
lalonde.cntrl <- lalonde[cntrl.idx, ]
re78.lm <- lm(re78 ~ age + educ + re74 + re75 + I(educ*re74) + I(educ*re75)
+ I(age*re74) + I(age*re75) + I(age*age) + I(re74*re75),
data = lalonde.cntrl)
re78.coef.sim <- sim(re78.lm, 10000)
coefs <- re78.coef.sim@coef
head(coefs)
re78.lm <- lm(re78 ~ age + educ + re74 + re75 + I(educ*re74) + I(educ*re75)
+ I(age*re74) + I(age*re75) + I(age*age) + I(re74*re75),
data = lalonde.cntrl)
re78.coef.sim <- sim(re78.lm, 10000)
coefs <- re78.coef.sim@coef
head(coefs)
library(arm)
data("lalonde")
lin_est <- function(coefs, params) {
est = coefs[1] +
coefs[2] * params[1] + # age
coefs[3] * params[2] + # educ
coefs[4] * params[3] + # re74
coefs[5] * params[4] + # re75
coefs[6] * params[2] * params[3] + # educ:re74
coefs[7] * params[2] * params[4] + # educ:re75
coefs[8] * params[1] * params[3] + # age:re74
coefs[9] * params[1] * params[4] + # age:re75
coefs[10] * params[1] * params[1] + # age:re75
coefs[11] * params[3] * params[4] # re74:re75
return(est)
}
cntrl.idx <- which(lalonde$treat == 0)
lalonde.cntrl <- lalonde[cntrl.idx, ]
educ.q <- quantile(lalonde.cntrl$educ, c(0.5, 0.75))
re74.q <- quantile(lalonde.cntrl$re74, c(0.5, 0.75))
re75.q <- quantile(lalonde.cntrl$re75, c(0.5, 0.75))
re78.lm <- lm(re78 ~ age + educ + re74 + re75 + I(educ*re74) + I(educ*re75)
+ I(age*re74) + I(age*re75) + I(age*age) + I(re74*re75),
data = lalonde.cntrl)
re78.coef.sim <- sim(re78.lm, 10000)
coefs <- re78.coef.sim@coef
head(coefs)
data("lalonde")
lin_est <- function(coefs, params) {
est = coefs[1] +
coefs[2] * params[1] + # age
coefs[3] * params[2] + # educ
coefs[4] * params[3] + # re74
coefs[5] * params[4] + # re75
coefs[6] * params[2] * params[3] + # educ:re74
coefs[7] * params[2] * params[4] + # educ:re75
coefs[8] * params[1] * params[3] + # age:re74
coefs[9] * params[1] * params[4] + # age:re75
coefs[10] * params[1] * params[1] + # age:re75
coefs[11] * params[3] * params[4] # re74:re75
return(est)
}
cntrl.idx <- which(lalonde$treat == 0)
lalonde.cntrl <- lalonde[cntrl.idx, ]
educ.q <- quantile(lalonde.cntrl$educ, c(0.5, 0.75))
re74.q <- quantile(lalonde.cntrl$re74, c(0.5, 0.75))
re75.q <- quantile(lalonde.cntrl$re75, c(0.5, 0.75))
re78.lm <- lm(re78 ~ age + educ + re74 + re75 + I(educ*re74) + I(educ*re75)
+ I(age*re74) + I(age*re75) + I(age*age) + I(re74*re75),
data = lalonde.cntrl)
re78.coef.sim <- sim(re78.lm, 10000)
coefs <- re78.coef.sim@coef
head(coefs)
# Exercise 2
library(Matching)
library(arm)
data("lalonde")
lin_est <- function(coefs, params) {
est = coefs[1] +
coefs[2] * params[1] + # age
coefs[3] * params[2] + # educ
coefs[4] * params[3] + # re74
coefs[5] * params[4] + # re75
coefs[6] * params[2] * params[3] + # educ:re74
coefs[7] * params[2] * params[4] + # educ:re75
coefs[8] * params[1] * params[3] + # age:re74
coefs[9] * params[1] * params[4] + # age:re75
coefs[10] * params[1] * params[1] + # age:re75
coefs[11] * params[3] * params[4] # re74:re75
return(est)
}
cntrl.idx <- which(lalonde$treat == 0)
lalonde.cntrl <- lalonde[cntrl.idx, ]
educ.q <- quantile(lalonde.cntrl$educ, c(0.5, 0.75))
re74.q <- quantile(lalonde.cntrl$re74, c(0.5, 0.75))
re75.q <- quantile(lalonde.cntrl$re75, c(0.5, 0.75))
re78.lm <- lm(re78 ~ age + educ + re74 + re75 + I(educ*re74) + I(educ*re75)
+ I(age*re74) + I(age*re75) + I(age*age) + I(re74*re75),
data = lalonde.cntrl)
re78.coef.sim <- sim(re78.lm, 10000)
coefs <- re78.coef.sim@coef
head(coefs)
